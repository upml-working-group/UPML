# function name map from jags to python
abs=abs
acos=numpy.arccos
arccos=numpy.arccos
arcsin=numpy.arcsin
arcsinh=numpy.arcsinh
arctan=numpy.arctan
arctanh=numpy.arctanh
asin=numpy.arcsin
asinh=numpy.arcsinh
atan=numpy.arctan
atan2=numpy.arctan2
atanh=numpy.arctanh
ceil=numpy.ceil
concat=concat
cos=numpy.cos
cosh=numpy.cosh
eq=eq
exp=numpy.exp
expm1=numpy.expm1
floor=numpy.floor
hypot=numpy.hypot
ifelse=ifelse
interplin=interplin
inverse=inverse
log=numpy.log
log1p=numpy.log1p
log10=numpy.log10
matrixmult=matrixmult
max=max
mean=numpy.mean
min=min
phi=phi
pow=pow
range=range
rank=numpy.argsort
rep=rep
round=round
sd=numpy.std
signum=numpy.sign
sin=numpy.sin
sinh=numpy.sinh
sort=numpy.sort
sqrt=numpy.sqrt
stddev=stddev
sum=sum
t=t
tan=numpy.tan
tanh=numpy.tanh
transpose=transpose
trunc=numpy.trunc

#order=order
#logdet=logdet
#logfact=logfact
#loggamm=loggamm
#loggamma=loggamma
#logit=scipy.special.logit
#step=step
#probit=probit
#cloglog=cloglog
#acosh=numpy.arccosh
#arccosh=numpy.arccosh


# distribution name map from jags to python
dexp=pm.Exponential('$(id)', lam=$(v1))
dbeta=pm.Beta('$(id)', alpha=$(v1), beta=$(v2))
ddirich=pm.Dirichlet('$(id)', a=$(v1))
duniform=pm.Uniform('$(id)', lower=$(v1), upper=$(v2))
dlnorm=pm.Lognormal('$(id)', shape=$v0)
cauchy=pm.Cauchy('$(id)', alpha=$(v1), beta=$(v2))
dweibull=pm.Weibull('$(id)', alpha=$(v1), beta=$(v2))
dbinom=pm.Binomial('$(id)', n=$(v1), p=$(v2))
dnbinom=pm.NegativeBinomial('$(id)', mu=$(v1), alpha=$(v2))
dhypergeometric=pm.Geometric('$(id)', p=$(v1))
chisquare=pm.ChiSquared('$(id)', nu=$(v1))
dt=pm.StudentT('$(id)', nu=$(v1))
laplace=pm.Laplace('$(id)', mu=$(v1), b=$(v2))
dnorm=pm.Normal('$(id)', mu=$(v1), sd=$(v2))
dgamma=pm.Gamma('$(id)', alpha=$(v1), beta=$(v2))

dzipf=dzipf
poisson=poisson
df=df
